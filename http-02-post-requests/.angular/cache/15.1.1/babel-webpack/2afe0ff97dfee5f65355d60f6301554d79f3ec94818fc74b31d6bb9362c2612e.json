{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5)(1, \"span\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"uppercase\");\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const server_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.getStatusClasses(server_r1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", server_r1.status, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" | \", i0.ɵɵpipeBind1(6, 5, server_r1.instanceType), \" | \", i0.ɵɵpipeBind2(7, 7, server_r1.started, \"fullDate\"), \" \");\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.servers = [{\n      instanceType: 'medium',\n      name: 'Production Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }, {\n      instanceType: 'large',\n      name: 'User Database',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }, {\n      instanceType: 'small',\n      name: 'Development Server',\n      status: 'offline',\n      started: new Date(15, 1, 2017)\n    }, {\n      instanceType: 'small',\n      name: 'Testing Environment Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }];\n  }\n  getStatusClasses(server) {\n    return {\n      'list-group-item-success': server.status === 'stable',\n      'list-group-item-warning': server.status === 'offline',\n      'list-group-item-danger': server.status === 'critical'\n    };\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-sm-10\", \"col-md-8\", \"col-sm-offset-1\", \"col-md-offset-2\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", 3, \"ngClass\"], [1, \"badge\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"ul\", 3);\n      i0.ɵɵtemplate(4, AppComponent_li_4_Template, 8, 10, \"li\", 4);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.servers);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.UpperCasePipe, i1.DatePipe],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  margin-top: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgbWFyZ2luLXRvcDogNTBweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;IAIQA,6BAAgG;IAE5FA,YACF;IAAAA,iBAAO;IACPA,8BAAQ;IAAAA,YAAiB;IAAAA,iBAAS;IAACA,YACrC;;;IAAAA,iBAAK;;;;;IALsDA,4DAAoC;IAE3FA,eACF;IADEA,iDACF;IACQA,eAAiB;IAAjBA,oCAAiB;IAAUA,eACrC;IADqCA,2IACrC;;;ACFR,OAAM,MAAOC,YAAY;EALzBC;IAME,YAAO,GAAG,CACR;MACEC,YAAY,EAAE,QAAQ;MACtBC,IAAI,EAAE,mBAAmB;MACzBC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;KAC9B,EACD;MACEJ,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,eAAe;MACrBC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;KAC9B,EACD;MACEJ,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,oBAAoB;MAC1BC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;KAC9B,EACD;MACEJ,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,4BAA4B;MAClCC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;KAC9B,CACF;;EACDC,gBAAgB,CAACC,MAA2E;IAC1F,OAAO;MACL,yBAAyB,EAAEA,MAAM,CAACJ,MAAM,KAAK,QAAQ;MACrD,yBAAyB,EAAEI,MAAM,CAACJ,MAAM,KAAK,SAAS;MACtD,wBAAwB,EAAEI,MAAM,CAACJ,MAAM,KAAK;KAC7C;EACH;;;mBAjCWJ,YAAY;AAAA;;QAAZA,YAAY;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPzBd,8BAAuB;MAIfA,4DAKK;MACPA,iBAAK;;;MAN4CA,eAAU;MAAVA,qCAAU","names":["i0","AppComponent","constructor","instanceType","name","status","started","Date","getStatusClasses","server","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\Angular\\pipes-start\\src\\app\\app.component.html","C:\\Users\\Admin\\Desktop\\Angular\\pipes-start\\src\\app\\app.component.ts"],"sourcesContent":["<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\">\n      <ul class=\"list-group\">\n        <li class=\"list-group-item\" *ngFor=\"let server of servers\" [ngClass]=\"getStatusClasses(server)\">\n          <span class=\"badge\">\n            {{ server.status }}\n          </span>\n          <strong>{{ server.name }}</strong> | {{ server.instanceType | uppercase }} | {{ server.started | date:'fullDate'}}\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  servers = [\n    {\n      instanceType: 'medium',\n      name: 'Production Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    },\n    {\n      instanceType: 'large',\n      name: 'User Database',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    },\n    {\n      instanceType: 'small',\n      name: 'Development Server',\n      status: 'offline',\n      started: new Date(15, 1, 2017)\n    },\n    {\n      instanceType: 'small',\n      name: 'Testing Environment Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }\n  ];\n  getStatusClasses(server: {instanceType: string, name: string, status: string, started: Date}) {\n    return {\n      'list-group-item-success': server.status === 'stable',\n      'list-group-item-warning': server.status === 'offline',\n      'list-group-item-danger': server.status === 'critical'\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}