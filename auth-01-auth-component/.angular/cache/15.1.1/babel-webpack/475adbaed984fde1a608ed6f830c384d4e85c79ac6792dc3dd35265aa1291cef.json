{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./count.service\";\nexport class UsersService {\n  constructor(countSr) {\n    this.countSr = countSr;\n    this.users = [{\n      name: 'Manu',\n      status: 'active'\n    }, {\n      name: 'Chris',\n      status: 'active'\n    }, {\n      name: 'Max',\n      status: 'inactive'\n    }, {\n      name: 'Anna',\n      status: 'inactive'\n    }];\n  }\n  updateStatus(id, newStatus) {\n    this.users[id].status = newStatus;\n    this.countSr.TotalCountIncrement();\n    console.log(this.countSr.TotalCount);\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.CountService));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac\n});","map":{"version":3,"mappings":";;AAIA,OAAM,MAAOA,YAAY;EAoBrBC,YAAoBC,OAAqB;IAArB,YAAO,GAAPA,OAAO;IAnB3B,UAAK,GAAG,CACJ;MACIC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE;KACX,EACD;MACID,IAAI,EAAE,OAAO;MACbC,MAAM,EAAE;KACX,EACD;MACID,IAAI,EAAE,KAAK;MACXC,MAAM,EAAE;KACX,EACD;MACID,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE;KACX,CACJ;EAE0C;EAE3CC,YAAY,CAACC,EAAU,EAAEC,SAAiB;IACtC,IAAI,CAACC,KAAK,CAACF,EAAE,CAAC,CAACF,MAAM,GAAGG,SAAS;IACjC,IAAI,CAACL,OAAO,CAACO,mBAAmB,EAAE;IAClCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,OAAO,CAACU,UAAU,CAAC;EACxC;;;mBA1BSZ,YAAY;AAAA;;SAAZA,YAAY;EAAAa,SAAZb,YAAY;AAAA","names":["UsersService","constructor","countSr","name","status","updateStatus","id","newStatus","users","TotalCountIncrement","console","log","TotalCount","factory"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\Angular\\services-start\\src\\app\\users.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { CountService } from \"./count.service\";\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n    users = [\r\n        {\r\n            name: 'Manu',\r\n            status: 'active'\r\n        },\r\n        {\r\n            name: 'Chris',\r\n            status: 'active'\r\n        },\r\n        {\r\n            name: 'Max',\r\n            status: 'inactive'\r\n        },\r\n        {\r\n            name: 'Anna',\r\n            status: 'inactive'\r\n        }\r\n    ];\r\n\r\n    constructor(private countSr: CountService){}\r\n\r\n    updateStatus(id: number, newStatus: string) {\r\n        this.users[id].status = newStatus;\r\n        this.countSr.TotalCountIncrement();\r\n        console.log(this.countSr.TotalCount)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}