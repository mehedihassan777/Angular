{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { PostService } from './post.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./post.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AppComponent_p_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No posts available!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ul_26_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var post_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r5.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r5.content);\n  }\n}\nfunction AppComponent_ul_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 15);\n    i0.ɵɵtemplate(1, AppComponent_ul_26_li_1_Template, 5, 2, \"li\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.loadedPosts);\n  }\n}\nfunction AppComponent_p_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nvar AppComponent = /** @class */function () {\n  function AppComponent(http, postSer) {\n    this.http = http;\n    this.postSer = postSer;\n    this.loadedPosts = [];\n    this.isFetching = false;\n  }\n  AppComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.isFetching = true;\n    this.postSer.fetchPosts().subscribe(function (posts) {\n      _this.loadedPosts = posts;\n    });\n    this.isFetching = false;\n  };\n  AppComponent.prototype.onCreatePost = function (postData) {\n    // Send Http request\n    this.postSer.createAndStorePost(postData.title, postData.content);\n  };\n  AppComponent.prototype.onFetchPosts = function () {\n    var _this = this;\n    // Send Http request\n    this.isFetching = true;\n    this.postSer.fetchPosts().subscribe(function (posts) {\n      _this.loadedPosts = posts;\n    });\n    this.isFetching = false;\n  };\n  AppComponent.prototype.onClearPosts = function () {\n    // Send Http request\n    this.postSer.deletePosts().subscribe(function (error) {\n      console.log(error.message);\n    });\n    this.loadedPosts = [];\n  };\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.PostService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 28,\n    vars: 5,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [3, \"ngSubmit\"], [\"postForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"required\", \"\", \"ngModel\", \"\", \"name\", \"title\", 1, \"form-control\"], [\"for\", \"content\"], [\"id\", \"content\", \"required\", \"\", \"ngModel\", \"\", \"name\", \"content\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [4, \"ngIf\"], [\"class\", \"list-group\", 4, \"ngIf\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        var _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r6);\n          var _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.onCreatePost(_r0.value));\n        });\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n        i0.ɵɵtext(7, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"textarea\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 10);\n        i0.ɵɵtext(14, \" Send Post \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(15, \"hr\");\n        i0.ɵɵelementStart(16, \"div\", 1)(17, \"div\", 2)(18, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_18_listener() {\n          return ctx.onFetchPosts();\n        });\n        i0.ɵɵtext(19, \" Fetch Posts \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \" | \");\n        i0.ɵɵelementStart(21, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_21_listener() {\n          return ctx.onClearPosts();\n        });\n        i0.ɵɵtext(22, \" Clear Posts \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 1)(24, \"div\", 2);\n        i0.ɵɵtemplate(25, AppComponent_p_25_Template, 2, 0, \"p\", 13);\n        i0.ɵɵtemplate(26, AppComponent_ul_26_Template, 2, 1, \"ul\", 14);\n        i0.ɵɵtemplate(27, AppComponent_p_27_Template, 2, 0, \"p\", 13);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        var _r0 = i0.ɵɵreference(4);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"disabled\", ctx.loadedPosts.length < 1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadedPosts.length < 1 && !ctx.isFetching);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadedPosts.length > 0 && !ctx.isFetching);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isFetching);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n}\\n\\n.row[_ngcontent-%COMP%] {\\n  margin: 20px 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG59XG5cbi5yb3cge1xuICBtYXJnaW46IDIwcHggMDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n  return AppComponent;\n}();\nexport { AppComponent };","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;AAGjD,SAASC,WAAW,QAAQ,gBAAgB;;;;;;;;IC4BtCC,yBAAiD;IAAAA,mCAAmB;IAAAA,iBAAI;;;;;IAEtEA,8BAA6D;IACvDA,YAAgB;IAAAA,iBAAK;IACzBA,yBAAG;IAAAA,YAAkB;IAAAA,iBAAI;;;;IADrBA,eAAgB;IAAhBA,mCAAgB;IACjBA,eAAkB;IAAlBA,qCAAkB;;;;;IAHzBA,8BAAqE;IACnEA,kEAGK;IACPA,iBAAK;;;;IAJ0CA,eAAc;IAAdA,4CAAc;;;;;IAK7DA,yBAAsB;IAAAA,0BAAU;IAAAA,iBAAI;;;ADjC1C;EASE,sBAAoBC,IAAgB,EAAUC,OAAoB;IAA9C,SAAI,GAAJD,IAAI;IAAsB,YAAO,GAAPC,OAAO;IAHrD,gBAAW,GAAG,EAAE;IAChB,eAAU,GAAG,KAAK;EAEoD;EAEtEC,+BAAQ,GAAR;IAAA;IACE,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACF,OAAO,CAACG,UAAU,EAAE,CAACC,SAAS,CAAC,eAAK;MACvCC,KAAI,CAACC,WAAW,GAAGC,KAAK;IAC1B,CAAC,CAAC;IACF,IAAI,CAACL,UAAU,GAAG,KAAK;EACzB,CAAC;EAEDD,mCAAY,GAAZ,UAAaO,QAA4C;IACvD;IACA,IAAI,CAACR,OAAO,CAACS,kBAAkB,CAACD,QAAQ,CAACE,KAAK,EAAEF,QAAQ,CAACG,OAAO,CAAC;EACnE,CAAC;EAEDV,mCAAY,GAAZ;IAAA;IACE;IACA,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACF,OAAO,CAACG,UAAU,EAAE,CAACC,SAAS,CAAC,eAAK;MACvCC,KAAI,CAACC,WAAW,GAAGC,KAAK;IAC1B,CAAC,CAAC;IACF,IAAI,CAACL,UAAU,GAAG,KAAK;EACzB,CAAC;EAEDD,mCAAY,GAAZ;IACE;IACA,IAAI,CAACD,OAAO,CAACY,WAAW,EAAE,CAACR,SAAS,CAAC,eAAK;MACxCS,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC;IACF,IAAI,CAACV,WAAW,GAAG,EAAE;EACvB,CAAC;;qBAlCUL,YAAY;EAAA;;UAAZA,YAAY;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;;QCXzBvB,8BAAuB;QAGQA;UAAAA;UAAA;UAAA,OAAYA,0CAA4B;QAAA,EAAC;QAChEA,8BAAwB;QACHA,qBAAK;QAAAA,iBAAQ;QAChCA,2BAAmF;QACrFA,iBAAM;QACNA,8BAAwB;QACDA,wBAAO;QAAAA,iBAAQ;QACpCA,+BAAuF;QACzFA,iBAAM;QACNA,mCAA2E;QACzEA,4BACF;QAAAA,iBAAS;QAIfA,sBAAM;QACNA,+BAAiB;QAEmBA;UAAA,OAASwB,kBAAc;QAAA,EAAC;QACtDxB,8BACF;QAAAA,iBAAS;QACTA,oBACA;QAAAA,mCAA4F;QAAzBA;UAAA,OAASwB,kBAAc;QAAA,EAAC;QACzFxB,8BACF;QAAAA,iBAAS;QAGbA,+BAAiB;QAEbA,4DAAwE;QACxEA,8DAKK;QACLA,4DAAoC;QACtCA,iBAAM;;;;QA5B4CA,gBAA4B;QAA5BA,qCAA4B;QAa7CA,eAAmC;QAAnCA,qDAAmC;QAO9DA,eAA2C;QAA3CA,oEAA2C;QACvBA,eAA2C;QAA3CA,oEAA2C;QAM/DA,eAAgB;QAAhBA,qCAAgB;;;;;;qBDvC1B;CA8CC,EAxCD;SAKaG,YAAY","names":["HttpClient","PostService","i0","http","postSer","AppComponent","isFetching","fetchPosts","subscribe","_this","loadedPosts","posts","postData","createAndStorePost","title","content","deletePosts","console","log","error","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\Angular\\http-02-post-requests\\src\\app\\app.component.ts","C:\\Users\\Admin\\Desktop\\Angular\\http-02-post-requests\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport { Post } from './post.model';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  loadedPosts = [];\n  isFetching = false;\n\n  constructor(private http: HttpClient, private postSer: PostService) { }\n\n  ngOnInit() {\n    this.isFetching = true;\n    this.postSer.fetchPosts().subscribe(posts => {\n      this.loadedPosts = posts;\n    });\n    this.isFetching = false;\n  }\n\n  onCreatePost(postData: { title: string; content: string }) {\n    // Send Http request\n    this.postSer.createAndStorePost(postData.title, postData.content);\n  }\n\n  onFetchPosts() {\n    // Send Http request\n    this.isFetching = true;\n    this.postSer.fetchPosts().subscribe(posts => {\n      this.loadedPosts = posts;\n    });\n    this.isFetching = false;\n  }\n\n  onClearPosts() {\n    // Send Http request\n    this.postSer.deletePosts().subscribe(error => {\n      console.log(error.message);\n    });\n    this.loadedPosts = [];\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n      <form #postForm=\"ngForm\" (ngSubmit)=\"onCreatePost(postForm.value)\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input type=\"text\" class=\"form-control\" id=\"title\" required ngModel name=\"title\" />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"content\">Content</label>\n          <textarea class=\"form-control\" id=\"content\" required ngModel name=\"content\"></textarea>\n        </div>\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!postForm.valid\">\n          Send Post\n        </button>\n      </form>\n    </div>\n  </div>\n  <hr />\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n      <button class=\"btn btn-primary\" (click)=\"onFetchPosts()\">\n        Fetch Posts\n      </button>\n      |\n      <button class=\"btn btn-danger\" [disabled]=\"loadedPosts.length < 1\" (click)=\"onClearPosts()\">\n        Clear Posts\n      </button>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\n      <p *ngIf=\"loadedPosts.length < 1 && !isFetching\">No posts available!</p>\n      <ul class=\"list-group\" *ngIf=\"loadedPosts.length > 0 && !isFetching\">\n        <li class=\"list-group-item\" *ngFor=\"let post of loadedPosts\">\n          <h3>{{ post.title }}</h3>\n          <p>{{ post.content }}</p>\n        </li>\n      </ul>\n      <p *ngIf=\"isFetching\">Loading...</p>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}