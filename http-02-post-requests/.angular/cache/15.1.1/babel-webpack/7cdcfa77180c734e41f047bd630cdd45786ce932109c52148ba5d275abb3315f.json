{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.appStatus = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve('stable');\n      }, 2000);\n    });\n    this.servers = [{\n      instanceType: 'medium',\n      name: 'Production Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }, {\n      instanceType: 'large',\n      name: 'User Database',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }, {\n      instanceType: 'small',\n      name: 'Development Server',\n      status: 'offline',\n      started: new Date(15, 1, 2017)\n    }, {\n      instanceType: 'small',\n      name: 'Testing Environment Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }];\n    this.filteredStatus = '';\n  }\n  getStatusClasses(server) {\n    return {\n      'list-group-item-success': server.status === 'stable',\n      'list-group-item-warning': server.status === 'offline',\n      'list-group-item-danger': server.status === 'critical'\n    };\n  }\n  onAddServer() {\n    const newServer = {\n      instanceType: 'small',\n      name: 'Testing Environment Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    };\n    this.servers.push(newServer);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAAlBC;IACL,cAAS,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MAC1CC,UAAU,CAAC,MAAK;QACdF,OAAO,CAAC,QAAQ,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;IACF,YAAO,GAAG,CACR;MACEG,YAAY,EAAE,QAAQ;MACtBC,IAAI,EAAE,mBAAmB;MACzBC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;KAC9B,EACD;MACEJ,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,eAAe;MACrBC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;KAC9B,EACD;MACEJ,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,oBAAoB;MAC1BC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;KAC9B,EACD;MACEJ,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,4BAA4B;MAClCC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;KAC9B,CACF;IAED,mBAAc,GAAW,EAAE;EAmB7B;EAjBEC,gBAAgB,CAACC,MAA6E;IAC5F,OAAO;MACL,yBAAyB,EAAEA,MAAM,CAACJ,MAAM,KAAK,QAAQ;MACrD,yBAAyB,EAAEI,MAAM,CAACJ,MAAM,KAAK,SAAS;MACtD,wBAAwB,EAAEI,MAAM,CAACJ,MAAM,KAAK;KAC7C;EACH;EAEAK,WAAW;IACT,MAAMC,SAAS,GAAG;MAChBR,YAAY,EAAE,OAAO;MACrBC,IAAI,EAAE,4BAA4B;MAClCC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,IAAIC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI;KAC9B;IACD,IAAI,CAACK,OAAO,CAACC,IAAI,CAACF,SAAS,CAAC;EAC9B;CACD;AApDYd,YAAY,eALxBD,SAAS,CAAC;EACTkB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWnB,YAAY,CAoDxB;SApDYA,YAAY","names":["Component","AppComponent","constructor","Promise","resolve","reject","setTimeout","instanceType","name","status","started","Date","getStatusClasses","server","onAddServer","newServer","servers","push","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\Angular\\pipes-start\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  appStatus = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('stable')\n    }, 2000);\n  })\n  servers = [\n    {\n      instanceType: 'medium',\n      name: 'Production Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    },\n    {\n      instanceType: 'large',\n      name: 'User Database',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    },\n    {\n      instanceType: 'small',\n      name: 'Development Server',\n      status: 'offline',\n      started: new Date(15, 1, 2017)\n    },\n    {\n      instanceType: 'small',\n      name: 'Testing Environment Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    }\n  ];\n\n  filteredStatus: string = '';\n\n  getStatusClasses(server: { instanceType: string, name: string, status: string, started: Date }) {\n    return {\n      'list-group-item-success': server.status === 'stable',\n      'list-group-item-warning': server.status === 'offline',\n      'list-group-item-danger': server.status === 'critical'\n    };\n  }\n\n  onAddServer() {\n    const newServer = {\n      instanceType: 'small',\n      name: 'Testing Environment Server',\n      status: 'stable',\n      started: new Date(15, 1, 2017)\n    };\n    this.servers.push(newServer);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}