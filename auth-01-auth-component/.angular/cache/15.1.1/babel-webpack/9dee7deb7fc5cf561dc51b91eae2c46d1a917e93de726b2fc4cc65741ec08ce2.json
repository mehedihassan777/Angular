{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nexport class ServerResolver {\n  constructor(serResSer) {\n    this.serResSer = serResSer;\n  }\n  resolve(route, state) {\n    return this.serResSer.getServer(+route.params['id']);\n  }\n}\nServerResolver.ɵfac = function ServerResolver_Factory(t) {\n  return new (t || ServerResolver)(i0.ɵɵinject(i1.ServersService));\n};\nServerResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServerResolver,\n  factory: ServerResolver.ɵfac\n});","map":{"version":3,"mappings":";;AAYA,OAAM,MAAOA,cAAc;EACvBC,YAAoBC,SAAyB;IAAzB,cAAS,GAATA,SAAS;EAAoB;EACjDC,OAAO,CAACC,KAA6B,EAAEC,KAA0B;IAC7D,OAAO,IAAI,CAACH,SAAS,CAACI,SAAS,CAAC,CAACF,KAAK,CAACG,MAAM,CAAC,IAAI,CAAC,CAAC;EACxD;;;mBAJSP,cAAc;AAAA;;SAAdA,cAAc;EAAAQ,SAAdR,cAAc;AAAA","names":["ServerResolver","constructor","serResSer","resolve","route","state","getServer","params","factory"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\Angular\\routing-start\\src\\app\\servers\\server\\server-resolver.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ServersService } from \"../servers.service\";\r\n\r\ninterface Server {\r\n    id: number;\r\n    name: string;\r\n    status: string;\r\n}\r\n\r\n@Injectable()\r\nexport class ServerResolver implements Resolve<Server>{\r\n    constructor(private serResSer: ServersService) { }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Server | Observable<Server> | Promise<Server> {\r\n        return this.serResSer.getServer(+route.params['id']);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}