{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction EditServerComponent_h4_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1, \"You are not allowed to edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditServerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"label\", 2);\n    i0.ɵɵtext(3, \"Server Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_div_1_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.serverName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n    i0.ɵɵtext(7, \"Server Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"select\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_div_1_Template_select_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.serverStatus = $event);\n    });\n    i0.ɵɵelementStart(9, \"option\", 6);\n    i0.ɵɵtext(10, \"Online\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 7);\n    i0.ɵɵtext(12, \"Offline\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function EditServerComponent_div_1_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onUpdateServer());\n    });\n    i0.ɵɵtext(14, \"Update Server\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.serverName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.serverStatus);\n  }\n}\nexport class EditServerComponent {\n  constructor(serversService, route) {\n    this.serversService = serversService;\n    this.route = route;\n    this.serverName = '';\n    this.serverStatus = '';\n    this.allowEdit = false;\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(queryParams => this.allowEdit = queryParams['allowEdit'] === '1' ? true : false);\n    this.route.fragment.subscribe();\n    this.server = this.serversService.getServer(1);\n    this.serverName = this.server.name;\n    this.serverStatus = this.server.status;\n  }\n  onUpdateServer() {\n    this.serversService.updateServer(this.server.id, {\n      name: this.serverName,\n      status: this.serverStatus\n    });\n  }\n}\nEditServerComponent.ɵfac = function EditServerComponent_Factory(t) {\n  return new (t || EditServerComponent)(i0.ɵɵdirectiveInject(i1.ServersService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditServerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditServerComponent,\n  selectors: [[\"app-edit-server\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"online\"], [\"value\", \"offline\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function EditServerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, EditServerComponent_h4_0_Template, 2, 0, \"h4\", 0);\n      i0.ɵɵtemplate(1, EditServerComponent_div_1_Template, 15, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.allowEdit);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.allowEdit);\n    }\n  },\n  dependencies: [i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAAAA,0BAAuB;IAAAA,2CAA2B;IAAAA,iBAAK;;;;;;IACvDA,2BAAwB;IAEFA,2BAAW;IAAAA,iBAAQ;IACrCA,gCAA2E;IAAzBA;MAAAA;MAAA;MAAA;IAAA,EAAwB;IAA1EA,iBAA2E;IAE7EA,8BAAwB;IACFA,6BAAa;IAAAA,iBAAQ;IACzCA,iCAAoE;IAA3BA;MAAAA;MAAA;MAAA;IAAA,EAA0B;IACjEA,iCAAuB;IAAAA,uBAAM;IAAAA,iBAAS;IACtCA,kCAAwB;IAAAA,wBAAO;IAAAA,iBAAS;IAG5CA,kCAA2D;IAA3BA;MAAAA;MAAA;MAAA,OAASA,sCAAgB;IAAA,EAAC;IAACA,8BAAa;IAAAA,iBAAS;;;;IAT7BA,eAAwB;IAAxBA,2CAAwB;IAIjCA,eAA0B;IAA1BA,6CAA0B;;;ACEvE,OAAM,MAAOC,mBAAmB;EAM9BC,YAAoBC,cAA8B,EAAUC,KAAqB;IAA7D,mBAAc,GAAdD,cAAc;IAA0B,UAAK,GAALC,KAAK;IAJjE,eAAU,GAAG,EAAE;IACf,iBAAY,GAAG,EAAE;IACjB,cAAS,GAAG,KAAK;EAEoE;EAErFC,QAAQ;IACN,IAAI,CAACD,KAAK,CAACE,WAAW,CAACC,SAAS,CAC7BD,WAAmB,IAAK,IAAI,CAACE,SAAS,GAAGF,WAAW,CAAC,WAAW,CAAC,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK,CAC1F;IACD,IAAI,CAACF,KAAK,CAACK,QAAQ,CAACF,SAAS,EAAE;IAC/B,IAAI,CAACG,MAAM,GAAG,IAAI,CAACP,cAAc,CAACQ,SAAS,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,MAAM,CAACG,IAAI;IAClC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,MAAM,CAACK,MAAM;EACxC;EAEAC,cAAc;IACZ,IAAI,CAACb,cAAc,CAACc,YAAY,CAAC,IAAI,CAACP,MAAM,CAACQ,EAAE,EAAE;MAAEL,IAAI,EAAE,IAAI,CAACD,UAAU;MAAEG,MAAM,EAAE,IAAI,CAACD;IAAY,CAAE,CAAC;EACxG;;;mBApBWb,mBAAmB;AAAA;;QAAnBA,mBAAmB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVhCvB,kEAAuD;MACvDA,qEAaM;;;MAdDA,qCAAgB;MACfA,eAAgB;MAAhBA,qCAAgB","names":["i0","EditServerComponent","constructor","serversService","route","ngOnInit","queryParams","subscribe","allowEdit","fragment","server","getServer","serverName","name","serverStatus","status","onUpdateServer","updateServer","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\Angular\\routing-start\\src\\app\\servers\\edit-server\\edit-server.component.html","C:\\Users\\Admin\\Desktop\\Angular\\routing-start\\src\\app\\servers\\edit-server\\edit-server.component.ts"],"sourcesContent":["<h4 *ngIf=\"!allowEdit\">You are not allowed to edit</h4>\n<div *ngIf=\"!allowEdit\">\n  <div class=\"form-group\">\n    <label for=\"name\">Server Name</label>\n    <input type=\"text\" id=\"name\" class=\"form-control\" [(ngModel)]=\"serverName\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"status\">Server Status</label>\n    <select id=\"status\" class=\"form-control\" [(ngModel)]=\"serverStatus\">\n      <option value=\"online\">Online</option>\n      <option value=\"offline\">Offline</option>\n    </select>\n  </div>\n  <button class=\"btn btn-primary\" (click)=\"onUpdateServer()\">Update Server</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { ServersService } from '../servers.service';\n\n@Component({\n  selector: 'app-edit-server',\n  templateUrl: './edit-server.component.html',\n  styleUrls: ['./edit-server.component.css']\n})\nexport class EditServerComponent implements OnInit {\n  server: { id: number, name: string, status: string };\n  serverName = '';\n  serverStatus = '';\n  allowEdit = false;\n\n  constructor(private serversService: ServersService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(\n      (queryParams: Params) => this.allowEdit = queryParams['allowEdit'] === '1' ? true : false\n    );\n    this.route.fragment.subscribe();\n    this.server = this.serversService.getServer(1);\n    this.serverName = this.server.name;\n    this.serverStatus = this.server.status;\n  }\n\n  onUpdateServer() {\n    this.serversService.updateServer(this.server.id, { name: this.serverName, status: this.serverStatus });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}