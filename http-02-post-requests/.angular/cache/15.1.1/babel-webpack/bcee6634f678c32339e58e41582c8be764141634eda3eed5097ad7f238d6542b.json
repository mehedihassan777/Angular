{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./logging.service\";\nexport class AccountService {\n  constructor(logSer) {\n    this.logSer = logSer;\n    this.accounts = [{\n      name: 'Master Account',\n      status: 'active'\n    }, {\n      name: 'Testaccount',\n      status: 'inactive'\n    }, {\n      name: 'Hidden Account',\n      status: 'unknown'\n    }];\n  }\n  addAccount(name, status) {\n    this.accounts.push({\n      name: name,\n      status: status\n    });\n    this.logSer.LogStatusChange(status);\n  }\n  updateStatus(id, newStatus) {\n    this.accounts[id].status = newStatus;\n    this.logSer.LogStatusChange(newStatus);\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.LoggingService));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,cAAc;EAgBvBC,YAAoBC,MAAsB;IAAtB,WAAM,GAANA,MAAM;IAf1B,aAAQ,GAAG,CACP;MACIC,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;KACX,EACD;MACID,IAAI,EAAE,aAAa;MACnBC,MAAM,EAAE;KACX,EACD;MACID,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;KACX,CACJ;EAE6C;EAE9CC,UAAU,CAACF,IAAY,EAAEC,MAAc;IACnC,IAAI,CAACE,QAAQ,CAACC,IAAI,CAAC;MAAEJ,IAAI,EAAEA,IAAI;MAAEC,MAAM,EAAEA;IAAM,CAAE,CAAC;IAClD,IAAI,CAACF,MAAM,CAACM,eAAe,CAACJ,MAAM,CAAC;EACvC;EAEAK,YAAY,CAACC,EAAU,EAAEC,SAAiB;IACtC,IAAI,CAACL,QAAQ,CAACI,EAAE,CAAC,CAACN,MAAM,GAAGO,SAAS;IACpC,IAAI,CAACT,MAAM,CAACM,eAAe,CAACG,SAAS,CAAC;EAC1C;;;mBA1BSX,cAAc;AAAA;;SAAdA,cAAc;EAAAY,SAAdZ,cAAc;AAAA","names":["AccountService","constructor","logSer","name","status","addAccount","accounts","push","LogStatusChange","updateStatus","id","newStatus","factory"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\Angular\\services-start\\src\\app\\account.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { LoggingService } from \"./logging.service\";\r\n\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n    accounts = [\r\n        {\r\n            name: 'Master Account',\r\n            status: 'active'\r\n        },\r\n        {\r\n            name: 'Testaccount',\r\n            status: 'inactive'\r\n        },\r\n        {\r\n            name: 'Hidden Account',\r\n            status: 'unknown'\r\n        }\r\n    ];\r\n\r\n    constructor(private logSer: LoggingService) { }\r\n\r\n    addAccount(name: string, status: string) {\r\n        this.accounts.push({ name: name, status: status });\r\n        this.logSer.LogStatusChange(status);\r\n    }\r\n\r\n    updateStatus(id: number, newStatus: string) {\r\n        this.accounts[id].status = newStatus;\r\n        this.logSer.LogStatusChange(newStatus);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}