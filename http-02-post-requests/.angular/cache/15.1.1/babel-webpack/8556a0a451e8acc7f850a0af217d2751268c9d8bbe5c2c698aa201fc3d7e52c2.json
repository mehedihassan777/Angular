{"ast":null,"code":"import { __assign, __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\nvar AppComponent = /** @class */function () {\n  function AppComponent(http) {\n    this.http = http;\n    this.loadedPosts = [];\n  }\n  AppComponent.prototype.ngOnInit = function () {};\n  AppComponent.prototype.onCreatePost = function (postData) {\n    // Send Http request\n    this.http.post('https://http-practice-9d5c8-default-rtdb.firebaseio.com/posts.json', postData).subscribe(function (responseData) {\n      console.log(responseData);\n    });\n  };\n  AppComponent.prototype.onFetchPosts = function () {\n    var _this = this;\n    // Send Http request\n    this.http.get('https://http-practice-9d5c8-default-rtdb.firebaseio.com/posts.json').pipe(map(function (responseData) {\n      var postArray = [];\n      for (var key in responseData) {\n        if (responseData.hasOwnProperty(key)) postArray.push(__assign(__assign({}, responseData[key]), {\n          id: key\n        }));\n      }\n      return postArray;\n    })).subscribe(function (posts) {\n      _this.loadedPosts = posts;\n    });\n  };\n  AppComponent.prototype.onClearPosts = function () {\n    // Send Http request\n  };\n  AppComponent = __decorate([Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n  }), __metadata(\"design:paramtypes\", [HttpClient])], AppComponent);\n  return AppComponent;\n}();\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,GAAG,QAAQ,MAAM;AAQ1B;EAGE,sBAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,gBAAW,GAAG,EAAE;EAEwB;EAExCC,+BAAQ,GAAR,aAAa,CAAC;EAEdA,mCAAY,GAAZ,UAAaC,QAA4C;IACvD;IACA,IAAI,CAACF,IAAI,CACNG,IAAI,CACH,oEAAoE,EACpED,QAAQ,CACT,CACAE,SAAS,CAAC,sBAAY;MACrBC,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EAEDN,mCAAY,GAAZ;IAAA;IACE;IACA,IAAI,CAACD,IAAI,CAACQ,GAAG,CAA0B,oEAAoE,CAAC,CAACC,IAAI,CAACV,GAAG,CAAC,sBAAY;MAChI,IAAMW,SAAS,GAAW,EAAE;MAC5B,KAAK,IAAMC,GAAG,IAAIJ,YAAY,EAAE;QAC9B,IAAIA,YAAY,CAACK,cAAc,CAACD,GAAG,CAAC,EAClCD,SAAS,CAACG,IAAI,uBAAMN,YAAY,CAACI,GAAG,CAAC;UAAEG,EAAE,EAAEH;QAAG,GAAG;;MAErD,OAAOD,SAAS;IAClB,CAAC,CAAC,CAAC,CAACN,SAAS,CAAC,eAAK;MACjBW,KAAI,CAACC,WAAW,GAAGC,KAAK;IAC1B,CAAC,CAAC;EACJ,CAAC;EAEDhB,mCAAY,GAAZ;IACE;EAAA,CACD;EAnCUA,YAAY,eALxBJ,SAAS,CAAC;IACTqB,QAAQ,EAAE,UAAU;IACpBC,WAAW,EAAE,sBAAsB;IACnCC,SAAS,EAAE,CAAC,qBAAqB;GAClC,CAAC,mCAI0BtB,UAAU,KAHzBG,YAAY,CAoCxB;EAAD,mBAAC;CAAA,EAzCD;SAKaA,YAAY","names":["Component","HttpClient","map","http","AppComponent","postData","post","subscribe","console","log","responseData","get","pipe","postArray","key","hasOwnProperty","push","id","_this","loadedPosts","posts","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\Angular\\http-02-post-requests\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport { Post } from './post.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  loadedPosts = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() { }\n\n  onCreatePost(postData: { title: string; content: string }) {\n    // Send Http request\n    this.http\n      .post(\n        'https://http-practice-9d5c8-default-rtdb.firebaseio.com/posts.json',\n        postData\n      )\n      .subscribe(responseData => {\n        console.log(responseData);\n      });\n  }\n\n  onFetchPosts() {\n    // Send Http request\n    this.http.get<{ [key: string]: Post }>('https://http-practice-9d5c8-default-rtdb.firebaseio.com/posts.json').pipe(map(responseData=> {\n      const postArray: Post[] = [];\n      for (const key in responseData) {\n        if (responseData.hasOwnProperty(key))\n          postArray.push({ ...responseData[key], id: key });\n      }\n      return postArray;\n    })).subscribe(posts => {\n      this.loadedPosts = posts;\n    });\n  }\n\n  onClearPosts() {\n    // Send Http request\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}