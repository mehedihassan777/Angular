{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { AccountService } from '../account.service';\nimport { LoggingService } from '../logging.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../logging.service\";\nimport * as i2 from \"../account.service\";\nexport class AccountComponent {\n  constructor(logSer, accSer) {\n    this.logSer = logSer;\n    this.accSer = accSer;\n    this.statusChanged = new EventEmitter();\n  }\n  onSetTo(status) {\n    this.accSer.updateStatus(this.id, status);\n    this.logSer.LogStatusChange(status);\n  }\n}\nAccountComponent.ɵfac = function AccountComponent_Factory(t) {\n  return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.LoggingService), i0.ɵɵdirectiveInject(i2.AccountService));\n};\nAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountComponent,\n  selectors: [[\"app-account\"]],\n  inputs: {\n    account: \"account\",\n    id: \"id\"\n  },\n  outputs: {\n    statusChanged: \"statusChanged\"\n  },\n  features: [i0.ɵɵProvidersFeature([LoggingService, AccountService])],\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"row\"], [1, \"col-xs-12\", \"col-md-8\", \"col-md-offset-2\"], [1, \"btn\", \"btn-default\", 3, \"click\"]],\n  template: function AccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_7_listener() {\n        return ctx.onSetTo(\"active\");\n      });\n      i0.ɵɵtext(8, \"Set to 'active'\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_9_listener() {\n        return ctx.onSetTo(\"inactive\");\n      });\n      i0.ɵɵtext(10, \"Set to 'inactive'\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_11_listener() {\n        return ctx.onSetTo(\"unknown\");\n      });\n      i0.ɵɵtext(12, \"Set to 'unknown'\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.account.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"This account is \", ctx.account.status, \"\");\n    }\n  },\n  styles: [\".row[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  margin: 10px 0;\\n  padding: 10px 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsY0FBYztFQUNkLGVBQWU7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgbWFyZ2luOiAxMHB4IDA7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;AACtE,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,cAAc,QAAQ,oBAAoB;;;;AAQnD,OAAM,MAAOC,gBAAgB;EAK3BC,YAAoBC,MAAsB,EAAUC,MAAsB;IAAtD,WAAM,GAAND,MAAM;IAA0B,WAAM,GAANC,MAAM;IAFhD,kBAAa,GAAG,IAAIN,YAAY,EAAqC;EAED;EAE9EO,OAAO,CAACC,MAAc;IACpB,IAAI,CAACF,MAAM,CAACG,YAAY,CAAC,IAAI,CAACC,EAAE,EAAEF,MAAM,CAAC;IACzC,IAAI,CAACH,MAAM,CAACM,eAAe,CAACH,MAAM,CAAC;EACrC;;;mBAVWL,gBAAgB;AAAA;;QAAhBA,gBAAgB;EAAAS;EAAAC;IAAAC;IAAAJ;EAAA;EAAAK;IAAAC;EAAA;EAAAC,iCAFhB,CAACf,cAAc,EAAED,cAAc,CAAC;EAAAiB;EAAAC;EAAAC;EAAAC;IAAA;MCR7CC,8BAAiB;MAETA,YAAkB;MAAAA,iBAAK;MAC3BA,qBAAI;MACJA,yBAAG;MAAAA,YAAoC;MAAAA,iBAAI;MAC3CA,iCAA4D;MAA5BA;QAAA,OAASC,YAAQ,QAAQ,CAAC;MAAA,EAAC;MAACD,+BAAe;MAAAA,iBAAS;MACpFA,iCAA8D;MAA9BA;QAAA,OAASC,YAAQ,UAAU,CAAC;MAAA,EAAC;MAACD,kCAAiB;MAAAA,iBAAS;MACxFA,kCAA6D;MAA7BA;QAAA,OAASC,YAAQ,SAAS,CAAC;MAAA,EAAC;MAACD,iCAAgB;MAAAA,iBAAS;;;MALlFA,eAAkB;MAAlBA,sCAAkB;MAEnBA,eAAoC;MAApCA,iEAAoC","names":["EventEmitter","AccountService","LoggingService","AccountComponent","constructor","logSer","accSer","onSetTo","status","updateStatus","id","LogStatusChange","selectors","inputs","account","outputs","statusChanged","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\Angular\\services-start\\src\\app\\account\\account.component.ts","C:\\Users\\Admin\\Desktop\\Angular\\services-start\\src\\app\\account\\account.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AccountService } from '../account.service';\nimport { LoggingService } from '../logging.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css'],\n  providers: [LoggingService, AccountService]\n})\nexport class AccountComponent {\n  @Input() account: { name: string, status: string };\n  @Input() id: number;\n  @Output() statusChanged = new EventEmitter<{ id: number, newStatus: string }>();\n\n  constructor(private logSer: LoggingService, private accSer: AccountService) { }\n\n  onSetTo(status: string) {\n    this.accSer.updateStatus(this.id, status);\n    this.logSer.LogStatusChange(status);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12 col-md-8 col-md-offset-2\">\n    <h5>{{ account.name }}</h5>\n    <hr>\n    <p>This account is {{ account.status }}</p>\n    <button class=\"btn btn-default\" (click)=\"onSetTo('active')\">Set to 'active'</button>\n    <button class=\"btn btn-default\" (click)=\"onSetTo('inactive')\">Set to 'inactive'</button>\n    <button class=\"btn btn-default\" (click)=\"onSetTo('unknown')\">Set to 'unknown'</button>\n  </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}